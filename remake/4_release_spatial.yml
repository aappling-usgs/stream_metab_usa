target_default: 4_release_spatial

include:
  - 1_spatial.yml # 1_site_data.yml gets included via this file
  - 4_release_parent.yml
  
packages:
  - yaml
  - xml2
  - whisker
  - rgdal
  - httr
  - sbtools
  - dplyr
  - rgeos
  - dataRetrieval
  - meddle
  
sources:
  - ../4_data_release/code/post_data_release.R
  - ../4_data_release/code/export_points_meta.R
  - ../4_data_release/code/meddle_render.R
  - ../lib/load_profile.R
  
targets:
  4_release_spatial:
    depends: 
      - ../4_data_release/cache/points_metadata.yml
      - post_site_catchments
      - post_site_catchments_meta
      - post_site_points
      - post_site_points_meta
  
  # -- munge & write data for release --
      
  catchment_shapefile:
    command: write_shapefile(spatial.catchments, target_name)
    
  points_shapefile:
    command: write_shapefile(spatial.points, target_name)
    
  # -- create tables with partial info to complete manually --
  
  catchments_as_written:
    command: read_shapefile(catchment_shapefile)
    
  points_as_written:
    command: read_shapefile(points_shapefile)
  
  ../4_data_release/in/catchment_attr.csv:
    command: attribute_skeleton(catchments_as_written, target_name)
  
  ../4_data_release/in/points_attr.csv:
    command: attribute_skeleton(points_as_written, target_name)
  
  # -- read manual entry and extracted metadata -- 
  
  catchment_attr:
    command: as.attr_list('../4_data_release/in/catchment_attr.csv')  
  
  points_attr:
    command: as.attr_list('../4_data_release/in/points_attr.csv')
  
  # -- autopopulate metadata -- 
  
  catchment_metadata:
    command: extract_feature(spatial.catchments)
  
  points_metadata:
    command: extract_feature(spatial.points)
    
  ../4_data_release/cache/points_metadata.yml:
    command: export_points_meta(points_metadata, outfile=target_name)
  
  # -- create final metadata files --
  
  ../4_data_release/out/site_catchment_shapefile.xml:
    command: meddle_render("../4_data_release/in/metadata_site_catchment.yaml", target_name, parent_metadata, catchment_metadata, catchment_attr, 
      template='../4_data_release/in/fgdc_template.xml')
  
  ../4_data_release/out/site_points_shapefile.xml:
    command: meddle_render("../4_data_release/in/metadata_site_points.yaml", target_name, parent_metadata, points_metadata, points_attr, 
      template='../4_data_release/in/fgdc_template.xml')
  
  # -- SB posting: create the items to host data and metadata --

  Spatial_data:
    command: create_release_child(stream_metab_powell_release, target_name)
    
  pc1_spatial_catchments:
    command: create_release_child(Spatial_data, target_name)
  
  pc1_spatial_points:
    command: create_release_child(Spatial_data, target_name)
    
  # -- final targets: post data and metadata to SB --
  
  post_site_catchments:
    command: append_release_files(
      sb.id = pc1_spatial_catchments,
      files = catchment_shapefile)
    depends: spatial.catchments
    
  post_site_catchments_meta:  
    command: append_release_files(
      sb.id = pc1_spatial_catchments,
      files = '../4_data_release/out/site_catchment_shapefile.xml')
    
  post_site_points:
    command: append_release_files(
      sb.id = pc1_spatial_points,
      files = points_shapefile)
    depends: spatial.points
    
  post_site_points_meta:  
    command: append_release_files(
      sb.id = pc1_spatial_points,
      files = '../4_data_release/out/site_points_shapefile.xml')
